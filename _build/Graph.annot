"Graph.ml" 85 2315 2327 "Graph.ml" 85 2315 2334
type(
  key -> key -> Ordering.t
)
ident(
  def compare "Graph.ml" 86 2347 2355 "Graph.ml" 96 2757 2766
)
"Graph.ml" 85 2315 2337 "Graph.ml" 85 2315 2346
type(
  key -> key -> Ordering.t
)
ident(
  int_ref N.compare "Graph.ml" 12 182 184 "Graph.ml" 12 182 224
)
"Graph.ml" 86 2347 2359 "Graph.ml" 86 2347 2370
type(
  key -> bytes
)
ident(
  def string_of_t "Graph.ml" 87 2390 2398 "Graph.ml" 96 2757 2766
)
"Graph.ml" 86 2347 2373 "Graph.ml" 86 2347 2389
type(
  key -> bytes
)
ident(
  int_ref N.string_of_node "Graph.ml" 13 225 227 "Graph.ml" 13 225 262
)
"Graph.ml" 87 2390 2402 "Graph.ml" 87 2390 2409
type(
  unit -> key
)
ident(
  def gen_key "Graph.ml" 88 2418 2426 "Graph.ml" 96 2757 2766
)
"Graph.ml" 87 2390 2412 "Graph.ml" 87 2390 2417
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 88 2418 2430 "Graph.ml" 88 2418 2444
type(
  unit -> key
)
ident(
  def gen_key_random "Graph.ml" 89 2453 2461 "Graph.ml" 96 2757 2766
)
"Graph.ml" 88 2418 2447 "Graph.ml" 88 2418 2452
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 89 2453 2465 "Graph.ml" 89 2453 2475
type(
  'a -> unit -> key
)
ident(
  def gen_key_gt "Graph.ml" 90 2492 2500 "Graph.ml" 96 2757 2766
)
"Graph.ml" 89 2453 2476 "Graph.ml" 89 2453 2477
type(
  'a
)
"Graph.ml" 89 2453 2478 "Graph.ml" 89 2453 2480
type(
  unit
)
"Graph.ml" 89 2453 2483 "Graph.ml" 89 2453 2488
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 89 2453 2489 "Graph.ml" 89 2453 2491
type(
  unit
)
"Graph.ml" 89 2453 2483 "Graph.ml" 89 2453 2491
call(
  tail
)
type(
  key
)
"Graph.ml" 89 2453 2478 "Graph.ml" 89 2453 2491
type(
  unit -> key
)
"Graph.ml" 89 2453 2476 "Graph.ml" 89 2453 2491
type(
  'a -> unit -> key
)
"Graph.ml" 90 2492 2504 "Graph.ml" 90 2492 2514
type(
  'b -> unit -> key
)
ident(
  def gen_key_lt "Graph.ml" 91 2531 2539 "Graph.ml" 96 2757 2766
)
"Graph.ml" 90 2492 2515 "Graph.ml" 90 2492 2516
type(
  'b
)
"Graph.ml" 90 2492 2517 "Graph.ml" 90 2492 2519
type(
  unit
)
"Graph.ml" 90 2492 2522 "Graph.ml" 90 2492 2527
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 90 2492 2528 "Graph.ml" 90 2492 2530
type(
  unit
)
"Graph.ml" 90 2492 2522 "Graph.ml" 90 2492 2530
call(
  tail
)
type(
  key
)
"Graph.ml" 90 2492 2517 "Graph.ml" 90 2492 2530
type(
  unit -> key
)
"Graph.ml" 90 2492 2515 "Graph.ml" 90 2492 2530
type(
  'b -> unit -> key
)
"Graph.ml" 91 2531 2543 "Graph.ml" 91 2531 2558
type(
  'c -> 'd -> unit -> 'e option
)
ident(
  def gen_key_between "Graph.ml" 92 2573 2581 "Graph.ml" 96 2757 2766
)
"Graph.ml" 91 2531 2559 "Graph.ml" 91 2531 2560
type(
  'c
)
"Graph.ml" 91 2531 2561 "Graph.ml" 91 2531 2562
type(
  'd
)
"Graph.ml" 91 2531 2563 "Graph.ml" 91 2531 2565
type(
  unit
)
"Graph.ml" 91 2531 2568 "Graph.ml" 91 2531 2572
type(
  'e option
)
"Graph.ml" 91 2531 2563 "Graph.ml" 91 2531 2572
type(
  unit -> 'e option
)
"Graph.ml" 91 2531 2561 "Graph.ml" 91 2531 2572
type(
  'd -> unit -> 'e option
)
"Graph.ml" 91 2531 2559 "Graph.ml" 91 2531 2572
type(
  'c -> 'd -> unit -> 'e option
)
"Graph.ml" 92 2573 2585 "Graph.ml" 92 2573 2594
type(
  unit -> value
)
ident(
  def gen_value "Graph.ml" 93 2610 2618 "Graph.ml" 96 2757 2766
)
"Graph.ml" 92 2573 2597 "Graph.ml" 92 2573 2609
type(
  unit -> value
)
ident(
  int_ref N.gen_weight "Graph.ml" 16 330 332 "Graph.ml" 16 330 363
)
"Graph.ml" 93 2610 2622 "Graph.ml" 93 2610 2630
type(
  unit -> key * value
)
ident(
  def gen_pair "Graph.ml" 94 2663 2671 "Graph.ml" 96 2757 2766
)
"Graph.ml" 93 2610 2631 "Graph.ml" 93 2610 2633
type(
  unit
)
"Graph.ml" 93 2610 2637 "Graph.ml" 93 2610 2644
type(
  unit -> key
)
ident(
  int_ref gen_key "Graph.ml" 87 2390 2402 "Graph.ml" 87 2390 2409
)
"Graph.ml" 93 2610 2645 "Graph.ml" 93 2610 2647
type(
  unit
)
"Graph.ml" 93 2610 2637 "Graph.ml" 93 2610 2647
call(
  stack
)
type(
  key
)
"Graph.ml" 93 2610 2649 "Graph.ml" 93 2610 2658
type(
  unit -> value
)
ident(
  int_ref gen_value "Graph.ml" 92 2573 2585 "Graph.ml" 92 2573 2594
)
"Graph.ml" 93 2610 2659 "Graph.ml" 93 2610 2661
type(
  unit
)
"Graph.ml" 93 2610 2649 "Graph.ml" 93 2610 2661
call(
  stack
)
type(
  value
)
"Graph.ml" 93 2610 2637 "Graph.ml" 93 2610 2661
type(
  key * value
)
"Graph.ml" 93 2610 2631 "Graph.ml" 93 2610 2662
type(
  unit -> key * value
)
"Graph.ml" 94 2663 2675 "Graph.ml" 94 2663 2690
type(
  value -> bytes
)
ident(
  def string_of_value "Graph.ml" 95 2712 2720 "Graph.ml" 96 2757 2766
)
"Graph.ml" 94 2663 2693 "Graph.ml" 94 2663 2711
type(
  value -> bytes
)
ident(
  int_ref N.string_of_weight "Graph.ml" 14 263 265 "Graph.ml" 14 263 304
)
"Graph.ml" 95 2712 2724 "Graph.ml" 95 2712 2737
type(
  key -> bytes
)
ident(
  def string_of_key "Graph.ml" 95 2712 2756 "Graph.ml" 96 2757 2766
)
"Graph.ml" 95 2712 2740 "Graph.ml" 95 2712 2756
type(
  key -> bytes
)
ident(
  int_ref N.string_of_node "Graph.ml" 13 225 227 "Graph.ml" 13 225 262
)
"Graph.ml" 81 2216 2240 "Graph.ml" 96 2757 2767
call(
  stack
)
"Graph.ml" 106 3055 3065 "Graph.ml" 106 3055 3072
type(
  key -> key -> Ordering.t
)
ident(
  def compare "Graph.ml" 107 3085 3091 "Graph.ml" 116 3455 3462
)
"Graph.ml" 106 3055 3075 "Graph.ml" 106 3055 3084
type(
  key -> key -> Ordering.t
)
ident(
  int_ref N.compare "Graph.ml" 12 182 184 "Graph.ml" 12 182 224
)
"Graph.ml" 107 3085 3095 "Graph.ml" 107 3085 3108
type(
  key -> bytes
)
ident(
  def string_of_key "Graph.ml" 108 3128 3134 "Graph.ml" 116 3455 3462
)
"Graph.ml" 107 3085 3111 "Graph.ml" 107 3085 3127
type(
  key -> bytes
)
ident(
  int_ref N.string_of_node "Graph.ml" 13 225 227 "Graph.ml" 13 225 262
)
"Graph.ml" 108 3128 3138 "Graph.ml" 108 3128 3153
type(
  value -> bytes
)
ident(
  def string_of_value "Graph.ml" 109 3190 3196 "Graph.ml" 116 3455 3462
)
"Graph.ml" 108 3128 3154 "Graph.ml" 108 3128 3156
type(
  value
)
ident(
  def ns "Graph.ml" 108 3128 3159 "Graph.ml" 108 3128 3189
)
"Graph.ml" 108 3128 3159 "Graph.ml" 108 3128 3186
type(
  value -> bytes
)
ident(
  ext_ref NeighborDict.string_of_dict
)
"Graph.ml" 108 3128 3187 "Graph.ml" 108 3128 3189
type(
  value
)
ident(
  int_ref ns "Graph.ml" 108 3128 3154 "Graph.ml" 108 3128 3156
)
"Graph.ml" 108 3128 3159 "Graph.ml" 108 3128 3189
call(
  tail
)
type(
  bytes
)
"Graph.ml" 108 3128 3154 "Graph.ml" 108 3128 3189
type(
  value -> bytes
)
"Graph.ml" 109 3190 3200 "Graph.ml" 109 3190 3207
type(
  unit -> key
)
ident(
  def gen_key "Graph.ml" 110 3216 3222 "Graph.ml" 116 3455 3462
)
"Graph.ml" 109 3190 3210 "Graph.ml" 109 3190 3215
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 110 3216 3226 "Graph.ml" 110 3216 3240
type(
  unit -> key
)
ident(
  def gen_key_random "Graph.ml" 111 3249 3255 "Graph.ml" 116 3455 3462
)
"Graph.ml" 110 3216 3243 "Graph.ml" 110 3216 3248
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 111 3249 3259 "Graph.ml" 111 3249 3269
type(
  'f -> unit -> key
)
ident(
  def gen_key_gt "Graph.ml" 112 3286 3292 "Graph.ml" 116 3455 3462
)
"Graph.ml" 111 3249 3270 "Graph.ml" 111 3249 3271
type(
  'f
)
"Graph.ml" 111 3249 3272 "Graph.ml" 111 3249 3274
type(
  unit
)
"Graph.ml" 111 3249 3277 "Graph.ml" 111 3249 3282
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 111 3249 3283 "Graph.ml" 111 3249 3285
type(
  unit
)
"Graph.ml" 111 3249 3277 "Graph.ml" 111 3249 3285
call(
  tail
)
type(
  key
)
"Graph.ml" 111 3249 3272 "Graph.ml" 111 3249 3285
type(
  unit -> key
)
"Graph.ml" 111 3249 3270 "Graph.ml" 111 3249 3285
type(
  'f -> unit -> key
)
"Graph.ml" 112 3286 3296 "Graph.ml" 112 3286 3306
type(
  'g -> unit -> key
)
ident(
  def gen_key_lt "Graph.ml" 113 3323 3329 "Graph.ml" 116 3455 3462
)
"Graph.ml" 112 3286 3307 "Graph.ml" 112 3286 3308
type(
  'g
)
"Graph.ml" 112 3286 3309 "Graph.ml" 112 3286 3311
type(
  unit
)
"Graph.ml" 112 3286 3314 "Graph.ml" 112 3286 3319
type(
  unit -> key
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 112 3286 3320 "Graph.ml" 112 3286 3322
type(
  unit
)
"Graph.ml" 112 3286 3314 "Graph.ml" 112 3286 3322
call(
  tail
)
type(
  key
)
"Graph.ml" 112 3286 3309 "Graph.ml" 112 3286 3322
type(
  unit -> key
)
"Graph.ml" 112 3286 3307 "Graph.ml" 112 3286 3322
type(
  'g -> unit -> key
)
"Graph.ml" 113 3323 3333 "Graph.ml" 113 3323 3348
type(
  'h -> 'i -> unit -> 'j option
)
ident(
  def gen_key_between "Graph.ml" 114 3363 3369 "Graph.ml" 116 3455 3462
)
"Graph.ml" 113 3323 3349 "Graph.ml" 113 3323 3350
type(
  'h
)
"Graph.ml" 113 3323 3351 "Graph.ml" 113 3323 3352
type(
  'i
)
"Graph.ml" 113 3323 3353 "Graph.ml" 113 3323 3355
type(
  unit
)
"Graph.ml" 113 3323 3358 "Graph.ml" 113 3323 3362
type(
  'j option
)
"Graph.ml" 113 3323 3353 "Graph.ml" 113 3323 3362
type(
  unit -> 'j option
)
"Graph.ml" 113 3323 3351 "Graph.ml" 113 3323 3362
type(
  'i -> unit -> 'j option
)
"Graph.ml" 113 3323 3349 "Graph.ml" 113 3323 3362
type(
  'h -> 'i -> unit -> 'j option
)
"Graph.ml" 114 3363 3373 "Graph.ml" 114 3363 3382
type(
  unit -> value
)
ident(
  def gen_value "Graph.ml" 115 3407 3413 "Graph.ml" 116 3455 3462
)
"Graph.ml" 114 3363 3383 "Graph.ml" 114 3363 3385
type(
  unit
)
"Graph.ml" 114 3363 3388 "Graph.ml" 114 3363 3406
type(
  value
)
ident(
  ext_ref NeighborDict.empty
)
"Graph.ml" 114 3363 3383 "Graph.ml" 114 3363 3406
type(
  unit -> value
)
"Graph.ml" 115 3407 3417 "Graph.ml" 115 3407 3425
type(
  unit -> key * value
)
ident(
  def gen_pair "Graph.ml" 115 3407 3454 "Graph.ml" 116 3455 3462
)
"Graph.ml" 115 3407 3426 "Graph.ml" 115 3407 3428
type(
  unit
)
"Graph.ml" 115 3407 3432 "Graph.ml" 115 3407 3439
type(
  unit -> key
)
ident(
  int_ref gen_key "Graph.ml" 109 3190 3200 "Graph.ml" 109 3190 3207
)
"Graph.ml" 115 3407 3439 "Graph.ml" 115 3407 3441
type(
  unit
)
"Graph.ml" 115 3407 3432 "Graph.ml" 115 3407 3441
call(
  stack
)
type(
  key
)
"Graph.ml" 115 3407 3442 "Graph.ml" 115 3407 3451
type(
  unit -> value
)
ident(
  int_ref gen_value "Graph.ml" 114 3363 3373 "Graph.ml" 114 3363 3382
)
"Graph.ml" 115 3407 3451 "Graph.ml" 115 3407 3453
type(
  unit
)
"Graph.ml" 115 3407 3442 "Graph.ml" 115 3407 3453
call(
  stack
)
type(
  value
)
"Graph.ml" 115 3407 3432 "Graph.ml" 115 3407 3453
type(
  key * value
)
"Graph.ml" 115 3407 3426 "Graph.ml" 115 3407 3454
type(
  unit -> key * value
)
"Graph.ml" 100 2900 2920 "Graph.ml" 116 3455 3463
call(
  stack
)
"Graph.ml" 125 3752 3762 "Graph.ml" 125 3752 3769
type(
  key -> key -> Ordering.t
)
ident(
  def compare "Graph.ml" 126 3784 3790 "Graph.ml" 135 4105 4112
)
"Graph.ml" 125 3752 3772 "Graph.ml" 125 3752 3783
type(
  key -> key -> Ordering.t
)
ident(
  ext_ref Order.int_compare
)
"Graph.ml" 126 3784 3794 "Graph.ml" 126 3784 3807
type(
  key -> bytes
)
ident(
  def string_of_key "Graph.ml" 127 3824 3830 "Graph.ml" 135 4105 4112
)
"Graph.ml" 126 3784 3810 "Graph.ml" 126 3784 3823
type(
  key -> bytes
)
ident(
  ext_ref Pervasives.string_of_int
)
"Graph.ml" 127 3824 3834 "Graph.ml" 127 3824 3849
type(
  value -> bytes
)
ident(
  def string_of_value "Graph.ml" 128 3869 3875 "Graph.ml" 135 4105 4112
)
"Graph.ml" 127 3824 3852 "Graph.ml" 127 3824 3868
type(
  value -> bytes
)
ident(
  int_ref N.string_of_node "Graph.ml" 13 225 227 "Graph.ml" 13 225 262
)
"Graph.ml" 128 3869 3879 "Graph.ml" 128 3869 3886
type(
  unit -> key
)
ident(
  def gen_key "Graph.ml" 129 3894 3900 "Graph.ml" 135 4105 4112
)
"Graph.ml" 128 3869 3887 "Graph.ml" 128 3869 3889
type(
  unit
)
"Graph.ml" 128 3869 3892 "Graph.ml" 128 3869 3893
type(
  key
)
"Graph.ml" 128 3869 3887 "Graph.ml" 128 3869 3893
type(
  unit -> key
)
"Graph.ml" 129 3894 3904 "Graph.ml" 129 3894 3918
type(
  unit -> key
)
ident(
  def gen_key_random "Graph.ml" 130 3926 3932 "Graph.ml" 135 4105 4112
)
"Graph.ml" 129 3894 3919 "Graph.ml" 129 3894 3921
type(
  unit
)
"Graph.ml" 129 3894 3924 "Graph.ml" 129 3894 3925
type(
  key
)
"Graph.ml" 129 3894 3919 "Graph.ml" 129 3894 3925
type(
  unit -> key
)
"Graph.ml" 130 3926 3936 "Graph.ml" 130 3926 3946
type(
  'k -> unit -> key
)
ident(
  def gen_key_gt "Graph.ml" 131 3956 3962 "Graph.ml" 135 4105 4112
)
"Graph.ml" 130 3926 3947 "Graph.ml" 130 3926 3948
type(
  'k
)
"Graph.ml" 130 3926 3949 "Graph.ml" 130 3926 3951
type(
  unit
)
"Graph.ml" 130 3926 3954 "Graph.ml" 130 3926 3955
type(
  key
)
"Graph.ml" 130 3926 3949 "Graph.ml" 130 3926 3955
type(
  unit -> key
)
"Graph.ml" 130 3926 3947 "Graph.ml" 130 3926 3955
type(
  'k -> unit -> key
)
"Graph.ml" 131 3956 3966 "Graph.ml" 131 3956 3976
type(
  'l -> unit -> key
)
ident(
  def gen_key_lt "Graph.ml" 132 3989 3995 "Graph.ml" 135 4105 4112
)
"Graph.ml" 131 3956 3977 "Graph.ml" 131 3956 3978
type(
  'l
)
"Graph.ml" 131 3956 3979 "Graph.ml" 131 3956 3981
type(
  unit
)
"Graph.ml" 131 3956 3985 "Graph.ml" 131 3956 3987
type(
  key
)
"Graph.ml" 131 3956 3979 "Graph.ml" 131 3956 3988
type(
  unit -> key
)
"Graph.ml" 131 3956 3977 "Graph.ml" 131 3956 3988
type(
  'l -> unit -> key
)
"Graph.ml" 132 3989 3999 "Graph.ml" 132 3989 4014
type(
  'm -> 'n -> unit -> 'o option
)
ident(
  def gen_key_between "Graph.ml" 133 4029 4035 "Graph.ml" 135 4105 4112
)
"Graph.ml" 132 3989 4015 "Graph.ml" 132 3989 4016
type(
  'm
)
"Graph.ml" 132 3989 4017 "Graph.ml" 132 3989 4018
type(
  'n
)
"Graph.ml" 132 3989 4019 "Graph.ml" 132 3989 4021
type(
  unit
)
"Graph.ml" 132 3989 4024 "Graph.ml" 132 3989 4028
type(
  'o option
)
"Graph.ml" 132 3989 4019 "Graph.ml" 132 3989 4028
type(
  unit -> 'o option
)
"Graph.ml" 132 3989 4017 "Graph.ml" 132 3989 4028
type(
  'n -> unit -> 'o option
)
"Graph.ml" 132 3989 4015 "Graph.ml" 132 3989 4028
type(
  'm -> 'n -> unit -> 'o option
)
"Graph.ml" 133 4029 4039 "Graph.ml" 133 4029 4048
type(
  unit -> value
)
ident(
  def gen_value "Graph.ml" 134 4057 4063 "Graph.ml" 135 4105 4112
)
"Graph.ml" 133 4029 4051 "Graph.ml" 133 4029 4056
type(
  unit -> value
)
ident(
  int_ref N.gen "Graph.ml" 15 305 307 "Graph.ml" 15 305 329
)
"Graph.ml" 134 4057 4067 "Graph.ml" 134 4057 4075
type(
  unit -> key * value
)
ident(
  def gen_pair "Graph.ml" 134 4057 4104 "Graph.ml" 135 4105 4112
)
"Graph.ml" 134 4057 4076 "Graph.ml" 134 4057 4078
type(
  unit
)
"Graph.ml" 134 4057 4082 "Graph.ml" 134 4057 4089
type(
  unit -> key
)
ident(
  int_ref gen_key "Graph.ml" 128 3869 3879 "Graph.ml" 128 3869 3886
)
"Graph.ml" 134 4057 4089 "Graph.ml" 134 4057 4091
type(
  unit
)
"Graph.ml" 134 4057 4082 "Graph.ml" 134 4057 4091
call(
  stack
)
type(
  key
)
"Graph.ml" 134 4057 4092 "Graph.ml" 134 4057 4101
type(
  unit -> value
)
ident(
  int_ref gen_value "Graph.ml" 133 4029 4039 "Graph.ml" 133 4029 4048
)
"Graph.ml" 134 4057 4101 "Graph.ml" 134 4057 4103
type(
  unit
)
"Graph.ml" 134 4057 4092 "Graph.ml" 134 4057 4103
call(
  stack
)
type(
  value
)
"Graph.ml" 134 4057 4082 "Graph.ml" 134 4057 4103
type(
  key * value
)
"Graph.ml" 134 4057 4076 "Graph.ml" 134 4057 4104
type(
  unit -> key * value
)
"Graph.ml" 121 3666 3685 "Graph.ml" 135 4105 4113
call(
  stack
)
"Graph.ml" 141 4241 4246 "Graph.ml" 141 4241 4251
type(
  graph
)
ident(
  def empty "Graph.ml" 145 4386 4387 "Graph.ml" 207 6653 6656
)
"Graph.ml" 141 4241 4272 "Graph.ml" 141 4241 4286
type(
  EdgeDict.dict
)
ident(
  ext_ref EdgeDict.empty
)
"Graph.ml" 142 4288 4323 "Graph.ml" 142 4288 4324
type(
  int
)
"Graph.ml" 143 4326 4369 "Graph.ml" 143 4326 4382
type(
  IntNode.dict
)
ident(
  ext_ref IntNode.empty
)
"Graph.ml" 141 4241 4262 "Graph.ml" 143 4326 4384
type(
  graph
)
type(
  graph
)
"Graph.ml" 145 4386 4391 "Graph.ml" 145 4386 4399
type(
  graph -> node -> graph
)
ident(
  def add_node "Graph.ml" 153 4640 4642 "Graph.ml" 207 6653 6656
)
"Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
type(
  graph
)
ident(
  def g "Graph.ml" 145 4386 4402 "Graph.ml" 151 4579 4638
)
"Graph.ml" 145 4386 4402 "Graph.ml" 145 4386 4403
type(
  node
)
ident(
  def n "Graph.ml" 146 4406 4409 "Graph.ml" 151 4579 4638
)
"Graph.ml" 146 4406 4412 "Graph.ml" 146 4406 4427
type(
  EdgeDict.dict -> node -> bool
)
ident(
  ext_ref EdgeDict.member
)
"Graph.ml" 146 4406 4428 "Graph.ml" 146 4406 4429
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 146 4406 4428 "Graph.ml" 146 4406 4435
type(
  EdgeDict.dict
)
"Graph.ml" 146 4406 4436 "Graph.ml" 146 4406 4437
type(
  node
)
ident(
  int_ref n "Graph.ml" 145 4386 4402 "Graph.ml" 145 4386 4403
)
"Graph.ml" 146 4406 4412 "Graph.ml" 146 4406 4437
call(
  stack
)
type(
  bool
)
"Graph.ml" 146 4406 4443 "Graph.ml" 146 4406 4444
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 148 4453 4468 "Graph.ml" 148 4453 4483
type(
  EdgeDict.dict -> node -> EdgeDict.value -> EdgeDict.dict
)
ident(
  ext_ref EdgeDict.insert
)
"Graph.ml" 148 4453 4484 "Graph.ml" 148 4453 4485
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 148 4453 4484 "Graph.ml" 148 4453 4491
type(
  EdgeDict.dict
)
"Graph.ml" 148 4453 4492 "Graph.ml" 148 4453 4493
type(
  node
)
ident(
  int_ref n "Graph.ml" 145 4386 4402 "Graph.ml" 145 4386 4403
)
"Graph.ml" 148 4453 4494 "Graph.ml" 148 4453 4512
type(
  EdgeDict.value
)
ident(
  ext_ref NeighborDict.empty
)
"Graph.ml" 148 4453 4468 "Graph.ml" 148 4453 4512
call(
  stack
)
type(
  EdgeDict.dict
)
"Graph.ml" 149 4515 4534 "Graph.ml" 149 4515 4535
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 149 4515 4534 "Graph.ml" 149 4515 4545
type(
  int
)
"Graph.ml" 149 4515 4546 "Graph.ml" 149 4515 4547
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"Graph.ml" 149 4515 4548 "Graph.ml" 149 4515 4549
type(
  int
)
"Graph.ml" 149 4515 4534 "Graph.ml" 149 4515 4549
type(
  int
)
"Graph.ml" 151 4579 4588 "Graph.ml" 151 4579 4602
type(
  IntNode.dict -> int -> node -> IntNode.dict
)
ident(
  ext_ref IntNode.insert
)
"Graph.ml" 151 4579 4603 "Graph.ml" 151 4579 4604
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 151 4579 4603 "Graph.ml" 151 4579 4622
type(
  IntNode.dict
)
"Graph.ml" 151 4579 4623 "Graph.ml" 151 4579 4624
type(
  graph
)
ident(
  int_ref g "Graph.ml" 145 4386 4400 "Graph.ml" 145 4386 4401
)
"Graph.ml" 151 4579 4623 "Graph.ml" 151 4579 4634
type(
  int
)
"Graph.ml" 151 4579 4635 "Graph.ml" 151 4579 4636
type(
  node
)
ident(
  int_ref n "Graph.ml" 145 4386 4402 "Graph.ml" 145 4386 4403
)
"Graph.ml" 151 4579 4588 "Graph.ml" 151 4579 4636
call(
  stack
)
type(
  IntNode.dict
)
"Graph.ml" 148 4453 4458 "Graph.ml" 151 4579 4638
type(
  graph
)
"Graph.ml" 146 4406 4409 "Graph.ml" 151 4579 4638
type(
  graph
)
"Graph.ml" 145 4386 4402 "Graph.ml" 151 4579 4638
type(
  node -> graph
)
"Graph.ml" 145 4386 4400 "Graph.ml" 151 4579 4638
type(
  graph -> node -> graph
)
"Graph.ml" 153 4640 4646 "Graph.ml" 153 4640 4651
type(
  graph -> node list
)
ident(
  def nodes "Graph.ml" 156 4708 4710 "Graph.ml" 207 6653 6656
)
"Graph.ml" 153 4640 4652 "Graph.ml" 153 4640 4653
type(
  graph
)
ident(
  def g "Graph.ml" 154 4656 4660 "Graph.ml" 154 4656 4706
)
"Graph.ml" 154 4656 4660 "Graph.ml" 154 4656 4673
type(
  (node -> EdgeDict.value -> node list -> node list) ->
  node list -> EdgeDict.dict -> node list
)
ident(
  ext_ref EdgeDict.fold
)
"Graph.ml" 154 4656 4679 "Graph.ml" 154 4656 4680
type(
  node
)
ident(
  def k "Graph.ml" 154 4656 4681 "Graph.ml" 154 4656 4694
)
"Graph.ml" 154 4656 4681 "Graph.ml" 154 4656 4682
type(
  EdgeDict.value
)
"Graph.ml" 154 4656 4683 "Graph.ml" 154 4656 4684
type(
  node list
)
ident(
  def r "Graph.ml" 154 4656 4688 "Graph.ml" 154 4656 4694
)
"Graph.ml" 154 4656 4688 "Graph.ml" 154 4656 4689
type(
  node
)
ident(
  int_ref k "Graph.ml" 154 4656 4679 "Graph.ml" 154 4656 4680
)
"Graph.ml" 154 4656 4693 "Graph.ml" 154 4656 4694
type(
  node list
)
ident(
  int_ref r "Graph.ml" 154 4656 4683 "Graph.ml" 154 4656 4684
)
"Graph.ml" 154 4656 4688 "Graph.ml" 154 4656 4694
type(
  node list
)
"Graph.ml" 154 4656 4683 "Graph.ml" 154 4656 4694
type(
  node list -> node list
)
"Graph.ml" 154 4656 4681 "Graph.ml" 154 4656 4694
type(
  EdgeDict.value -> node list -> node list
)
"Graph.ml" 154 4656 4679 "Graph.ml" 154 4656 4694
type(
  node -> EdgeDict.value -> node list -> node list
)
"Graph.ml" 154 4656 4696 "Graph.ml" 154 4656 4698
type(
  node list
)
"Graph.ml" 154 4656 4699 "Graph.ml" 154 4656 4700
type(
  graph
)
ident(
  int_ref g "Graph.ml" 153 4640 4652 "Graph.ml" 153 4640 4653
)
"Graph.ml" 154 4656 4699 "Graph.ml" 154 4656 4706
type(
  EdgeDict.dict
)
"Graph.ml" 154 4656 4660 "Graph.ml" 154 4656 4706
call(
  tail
)
type(
  node list
)
"Graph.ml" 153 4640 4652 "Graph.ml" 154 4656 4706
type(
  graph -> node list
)
"Graph.ml" 156 4708 4714 "Graph.ml" 156 4708 4722
type(
  graph -> bool
)
ident(
  def is_empty "Graph.ml" 162 4985 4987 "Graph.ml" 207 6653 6656
)
"Graph.ml" 156 4708 4723 "Graph.ml" 156 4708 4724
type(
  graph
)
ident(
  def g "Graph.ml" 156 4708 4728 "Graph.ml" 156 4708 4743
)
"Graph.ml" 156 4708 4728 "Graph.ml" 156 4708 4729
type(
  graph
)
ident(
  int_ref g "Graph.ml" 156 4708 4723 "Graph.ml" 156 4708 4724
)
"Graph.ml" 156 4708 4728 "Graph.ml" 156 4708 4739
type(
  int
)
"Graph.ml" 156 4708 4740 "Graph.ml" 156 4708 4741
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"Graph.ml" 156 4708 4742 "Graph.ml" 156 4708 4743
type(
  int
)
"Graph.ml" 156 4708 4728 "Graph.ml" 156 4708 4743
type(
  bool
)
"Graph.ml" 156 4708 4723 "Graph.ml" 156 4708 4744
type(
  graph -> bool
)
"Graph.ml" 162 4985 4991 "Graph.ml" 162 4985 4999
type(
  graph -> node -> node -> weight -> graph
)
ident(
  def add_edge "Graph.ml" 177 5616 5618 "Graph.ml" 207 6653 6656
)
"Graph.ml" 162 4985 5000 "Graph.ml" 162 4985 5001
type(
  graph
)
ident(
  def g "Graph.ml" 162 4985 5002 "Graph.ml" 174 5501 5560
)
"Graph.ml" 162 4985 5002 "Graph.ml" 162 4985 5006
type(
  node
)
ident(
  def orig "Graph.ml" 162 4985 5007 "Graph.ml" 174 5501 5560
)
"Graph.ml" 162 4985 5007 "Graph.ml" 162 4985 5011
type(
  node
)
ident(
  def dest "Graph.ml" 162 4985 5012 "Graph.ml" 174 5501 5560
)
"Graph.ml" 162 4985 5012 "Graph.ml" 162 4985 5013
type(
  weight
)
ident(
  def v "Graph.ml" 163 5016 5020 "Graph.ml" 174 5501 5560
)
"Graph.ml" 163 5016 5024 "Graph.ml" 163 5016 5032
type(
  graph -> node -> node -> weight -> graph
)
ident(
  def half_add "Graph.ml" 174 5501 5505 "Graph.ml" 174 5501 5560
)
"Graph.ml" 163 5016 5033 "Graph.ml" 163 5016 5034
type(
  graph
)
ident(
  def g "Graph.ml" 163 5016 5035 "Graph.ml" 172 5445 5493
)
"Graph.ml" 163 5016 5035 "Graph.ml" 163 5016 5038
type(
  node
)
ident(
  def src "Graph.ml" 163 5016 5039 "Graph.ml" 172 5445 5493
)
"Graph.ml" 163 5016 5039 "Graph.ml" 163 5016 5042
type(
  node
)
ident(
  def dst "Graph.ml" 163 5016 5043 "Graph.ml" 172 5445 5493
)
"Graph.ml" 163 5016 5043 "Graph.ml" 163 5016 5044
type(
  weight
)
ident(
  def v "Graph.ml" 164 5048 5054 "Graph.ml" 172 5445 5493
)
"Graph.ml" 164 5048 5058 "Graph.ml" 164 5048 5071
type(
  EdgeDict.value
)
ident(
  def new_neighbors "Graph.ml" 169 5303 5309 "Graph.ml" 172 5445 5493
)
"Graph.ml" 164 5048 5081 "Graph.ml" 164 5048 5096
type(
  EdgeDict.dict -> node -> EdgeDict.value option
)
ident(
  ext_ref EdgeDict.lookup
)
"Graph.ml" 164 5048 5097 "Graph.ml" 164 5048 5098
type(
  graph
)
ident(
  int_ref g "Graph.ml" 163 5016 5033 "Graph.ml" 163 5016 5034
)
"Graph.ml" 164 5048 5097 "Graph.ml" 164 5048 5104
type(
  EdgeDict.dict
)
"Graph.ml" 164 5048 5105 "Graph.ml" 164 5048 5108
type(
  node
)
ident(
  int_ref src "Graph.ml" 163 5016 5035 "Graph.ml" 163 5016 5038
)
"Graph.ml" 164 5048 5081 "Graph.ml" 164 5048 5108
call(
  stack
)
type(
  EdgeDict.value option
)
"Graph.ml" 165 5114 5124 "Graph.ml" 165 5114 5128
type(
  EdgeDict.value option
)
"Graph.ml" 165 5114 5132 "Graph.ml" 165 5114 5151
type(
  EdgeDict.value -> node -> weight -> EdgeDict.value
)
ident(
  ext_ref NeighborDict.insert
)
"Graph.ml" 165 5114 5152 "Graph.ml" 165 5114 5170
type(
  EdgeDict.value
)
ident(
  ext_ref NeighborDict.empty
)
"Graph.ml" 165 5114 5171 "Graph.ml" 165 5114 5174
type(
  node
)
ident(
  int_ref dst "Graph.ml" 163 5016 5039 "Graph.ml" 163 5016 5042
)
"Graph.ml" 165 5114 5175 "Graph.ml" 165 5114 5176
type(
  weight
)
ident(
  int_ref v "Graph.ml" 163 5016 5043 "Graph.ml" 163 5016 5044
)
"Graph.ml" 165 5114 5132 "Graph.ml" 165 5114 5176
call(
  stack
)
type(
  EdgeDict.value
)
"Graph.ml" 166 5177 5192 "Graph.ml" 166 5177 5193
type(
  EdgeDict.value
)
ident(
  def s "Graph.ml" 166 5177 5197 "Graph.ml" 166 5177 5224
)
"Graph.ml" 166 5177 5187 "Graph.ml" 166 5177 5193
type(
  EdgeDict.value option
)
"Graph.ml" 166 5177 5197 "Graph.ml" 166 5177 5216
type(
  EdgeDict.value -> node -> weight -> EdgeDict.value
)
ident(
  ext_ref NeighborDict.insert
)
"Graph.ml" 166 5177 5217 "Graph.ml" 166 5177 5218
type(
  EdgeDict.value
)
ident(
  int_ref s "Graph.ml" 166 5177 5192 "Graph.ml" 166 5177 5193
)
"Graph.ml" 166 5177 5219 "Graph.ml" 166 5177 5222
type(
  node
)
ident(
  int_ref dst "Graph.ml" 163 5016 5039 "Graph.ml" 163 5016 5042
)
"Graph.ml" 166 5177 5223 "Graph.ml" 166 5177 5224
type(
  weight
)
ident(
  int_ref v "Graph.ml" 163 5016 5043 "Graph.ml" 163 5016 5044
)
"Graph.ml" 166 5177 5197 "Graph.ml" 166 5177 5224
call(
  stack
)
type(
  EdgeDict.value
)
"Graph.ml" 164 5048 5075 "Graph.ml" 166 5177 5224
type(
  EdgeDict.value
)
"Graph.ml" 169 5303 5313 "Graph.ml" 169 5303 5315
type(
  graph
)
ident(
  def g' "Graph.ml" 170 5353 5359 "Graph.ml" 172 5445 5493
)
"Graph.ml" 169 5303 5319 "Graph.ml" 169 5303 5327
type(
  graph -> node -> graph
)
ident(
  int_ref add_node "Graph.ml" 145 4386 4391 "Graph.ml" 145 4386 4399
)
"Graph.ml" 169 5303 5329 "Graph.ml" 169 5303 5337
type(
  graph -> node -> graph
)
ident(
  int_ref add_node "Graph.ml" 145 4386 4391 "Graph.ml" 145 4386 4399
)
"Graph.ml" 169 5303 5338 "Graph.ml" 169 5303 5339
type(
  graph
)
ident(
  int_ref g "Graph.ml" 163 5016 5033 "Graph.ml" 163 5016 5034
)
"Graph.ml" 169 5303 5340 "Graph.ml" 169 5303 5343
type(
  node
)
ident(
  int_ref src "Graph.ml" 163 5016 5035 "Graph.ml" 163 5016 5038
)
"Graph.ml" 169 5303 5329 "Graph.ml" 169 5303 5343
call(
  stack
)
type(
  graph
)
"Graph.ml" 169 5303 5345 "Graph.ml" 169 5303 5348
type(
  node
)
ident(
  int_ref dst "Graph.ml" 163 5016 5039 "Graph.ml" 163 5016 5042
)
"Graph.ml" 169 5303 5319 "Graph.ml" 169 5303 5348
call(
  stack
)
type(
  graph
)
"Graph.ml" 170 5353 5368 "Graph.ml" 170 5353 5383
type(
  EdgeDict.dict -> node -> EdgeDict.value -> EdgeDict.dict
)
ident(
  ext_ref EdgeDict.insert
)
"Graph.ml" 170 5353 5384 "Graph.ml" 170 5353 5386
type(
  graph
)
ident(
  int_ref g' "Graph.ml" 169 5303 5313 "Graph.ml" 169 5303 5315
)
"Graph.ml" 170 5353 5384 "Graph.ml" 170 5353 5392
type(
  EdgeDict.dict
)
"Graph.ml" 170 5353 5393 "Graph.ml" 170 5353 5396
type(
  node
)
ident(
  int_ref src "Graph.ml" 163 5016 5035 "Graph.ml" 163 5016 5038
)
"Graph.ml" 170 5353 5397 "Graph.ml" 170 5353 5410
type(
  EdgeDict.value
)
ident(
  int_ref new_neighbors "Graph.ml" 164 5048 5058 "Graph.ml" 164 5048 5071
)
"Graph.ml" 170 5353 5368 "Graph.ml" 170 5353 5410
call(
  stack
)
type(
  EdgeDict.dict
)
"Graph.ml" 171 5412 5431 "Graph.ml" 171 5412 5433
type(
  graph
)
ident(
  int_ref g' "Graph.ml" 169 5303 5313 "Graph.ml" 169 5303 5315
)
"Graph.ml" 171 5412 5431 "Graph.ml" 171 5412 5443
type(
  int
)
"Graph.ml" 172 5445 5472 "Graph.ml" 172 5445 5474
type(
  graph
)
ident(
  int_ref g' "Graph.ml" 169 5303 5313 "Graph.ml" 169 5303 5315
)
"Graph.ml" 172 5445 5472 "Graph.ml" 172 5445 5492
type(
  IntNode.dict
)
"Graph.ml" 170 5353 5359 "Graph.ml" 172 5445 5493
type(
  graph
)
"Graph.ml" 169 5303 5309 "Graph.ml" 172 5445 5493
type(
  graph
)
"Graph.ml" 164 5048 5054 "Graph.ml" 172 5445 5493
type(
  graph
)
"Graph.ml" 163 5016 5043 "Graph.ml" 172 5445 5493
type(
  weight -> graph
)
"Graph.ml" 163 5016 5039 "Graph.ml" 172 5445 5493
type(
  node -> weight -> graph
)
"Graph.ml" 163 5016 5035 "Graph.ml" 172 5445 5493
type(
  node -> node -> weight -> graph
)
"Graph.ml" 163 5016 5033 "Graph.ml" 172 5445 5493
type(
  graph -> node -> node -> weight -> graph
)
"Graph.ml" 174 5501 5505 "Graph.ml" 174 5501 5511
type(
  graph -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"Graph.ml" 174 5501 5513 "Graph.ml" 174 5501 5521
type(
  graph -> node -> node -> weight -> graph
)
ident(
  int_ref half_add "Graph.ml" 163 5016 5024 "Graph.ml" 163 5016 5032
)
"Graph.ml" 174 5501 5522 "Graph.ml" 174 5501 5523
type(
  graph
)
ident(
  int_ref g "Graph.ml" 162 4985 5000 "Graph.ml" 162 4985 5001
)
"Graph.ml" 174 5501 5524 "Graph.ml" 174 5501 5528
type(
  node
)
ident(
  int_ref orig "Graph.ml" 162 4985 5002 "Graph.ml" 162 4985 5006
)
"Graph.ml" 174 5501 5529 "Graph.ml" 174 5501 5533
type(
  node
)
ident(
  int_ref dest "Graph.ml" 162 4985 5007 "Graph.ml" 162 4985 5011
)
"Graph.ml" 174 5501 5534 "Graph.ml" 174 5501 5535
type(
  weight
)
ident(
  int_ref v "Graph.ml" 162 4985 5012 "Graph.ml" 162 4985 5013
)
"Graph.ml" 174 5501 5513 "Graph.ml" 174 5501 5535
call(
  stack
)
type(
  graph
)
"Graph.ml" 174 5501 5505 "Graph.ml" 174 5501 5536
type(
  unit
)
"Graph.ml" 174 5501 5538 "Graph.ml" 174 5501 5546
type(
  graph -> node -> node -> weight -> graph
)
ident(
  int_ref half_add "Graph.ml" 163 5016 5024 "Graph.ml" 163 5016 5032
)
"Graph.ml" 174 5501 5547 "Graph.ml" 174 5501 5548
type(
  graph
)
ident(
  int_ref g "Graph.ml" 162 4985 5000 "Graph.ml" 162 4985 5001
)
"Graph.ml" 174 5501 5549 "Graph.ml" 174 5501 5553
type(
  node
)
ident(
  int_ref dest "Graph.ml" 162 4985 5007 "Graph.ml" 162 4985 5011
)
"Graph.ml" 174 5501 5554 "Graph.ml" 174 5501 5558
type(
  node
)
ident(
  int_ref orig "Graph.ml" 162 4985 5002 "Graph.ml" 162 4985 5006
)
"Graph.ml" 174 5501 5559 "Graph.ml" 174 5501 5560
type(
  weight
)
ident(
  int_ref v "Graph.ml" 162 4985 5012 "Graph.ml" 162 4985 5013
)
"Graph.ml" 174 5501 5538 "Graph.ml" 174 5501 5560
call(
  tail
)
type(
  graph
)
"Graph.ml" 174 5501 5505 "Graph.ml" 174 5501 5560
type(
  graph
)
"Graph.ml" 163 5016 5020 "Graph.ml" 174 5501 5560
type(
  graph
)
"Graph.ml" 162 4985 5012 "Graph.ml" 174 5501 5560
type(
  weight -> graph
)
"Graph.ml" 162 4985 5007 "Graph.ml" 174 5501 5560
type(
  node -> weight -> graph
)
"Graph.ml" 162 4985 5002 "Graph.ml" 174 5501 5560
type(
  node -> node -> weight -> graph
)
"Graph.ml" 162 4985 5000 "Graph.ml" 174 5501 5560
type(
  graph -> node -> node -> weight -> graph
)
"Graph.ml" 177 5616 5622 "Graph.ml" 177 5616 5631
type(
  graph -> node -> (node * weight) list option
)
ident(
  def neighbors "Graph.ml" 183 5868 5870 "Graph.ml" 207 6653 6656
)
"Graph.ml" 177 5616 5632 "Graph.ml" 177 5616 5633
type(
  graph
)
ident(
  def g "Graph.ml" 177 5616 5634 "Graph.ml" 180 5730 5812
)
"Graph.ml" 177 5616 5634 "Graph.ml" 177 5616 5635
type(
  node
)
ident(
  def n "Graph.ml" 177 5616 5636 "Graph.ml" 180 5730 5812
)
"Graph.ml" 178 5668 5678 "Graph.ml" 178 5668 5693
type(
  EdgeDict.dict -> node -> EdgeDict.value option
)
ident(
  ext_ref EdgeDict.lookup
)
"Graph.ml" 178 5668 5694 "Graph.ml" 178 5668 5695
type(
  graph
)
ident(
  int_ref g "Graph.ml" 177 5616 5632 "Graph.ml" 177 5616 5633
)
"Graph.ml" 178 5668 5694 "Graph.ml" 178 5668 5701
type(
  EdgeDict.dict
)
"Graph.ml" 178 5668 5702 "Graph.ml" 178 5668 5703
type(
  node
)
ident(
  int_ref n "Graph.ml" 177 5616 5634 "Graph.ml" 177 5616 5635
)
"Graph.ml" 178 5668 5678 "Graph.ml" 178 5668 5703
call(
  stack
)
type(
  EdgeDict.value option
)
"Graph.ml" 179 5709 5717 "Graph.ml" 179 5709 5721
type(
  EdgeDict.value option
)
"Graph.ml" 179 5709 5725 "Graph.ml" 179 5709 5729
type(
  (node * weight) list option
)
"Graph.ml" 180 5730 5743 "Graph.ml" 180 5730 5744
type(
  EdgeDict.value
)
ident(
  def s "Graph.ml" 180 5730 5748 "Graph.ml" 180 5730 5812
)
"Graph.ml" 180 5730 5738 "Graph.ml" 180 5730 5744
type(
  EdgeDict.value option
)
"Graph.ml" 180 5730 5754 "Graph.ml" 180 5730 5771
type(
  (node -> weight -> (node * weight) list -> (node * weight) list) ->
  (node * weight) list -> EdgeDict.value -> (node * weight) list
)
ident(
  ext_ref NeighborDict.fold
)
"Graph.ml" 180 5730 5777 "Graph.ml" 180 5730 5782
type(
  node
)
ident(
  def neigh "Graph.ml" 180 5730 5783 "Graph.ml" 180 5730 5805
)
"Graph.ml" 180 5730 5783 "Graph.ml" 180 5730 5784
type(
  weight
)
ident(
  def v "Graph.ml" 180 5730 5785 "Graph.ml" 180 5730 5805
)
"Graph.ml" 180 5730 5785 "Graph.ml" 180 5730 5786
type(
  (node * weight) list
)
ident(
  def r "Graph.ml" 180 5730 5790 "Graph.ml" 180 5730 5805
)
"Graph.ml" 180 5730 5791 "Graph.ml" 180 5730 5796
type(
  node
)
ident(
  int_ref neigh "Graph.ml" 180 5730 5777 "Graph.ml" 180 5730 5782
)
"Graph.ml" 180 5730 5798 "Graph.ml" 180 5730 5799
type(
  weight
)
ident(
  int_ref v "Graph.ml" 180 5730 5783 "Graph.ml" 180 5730 5784
)
"Graph.ml" 180 5730 5791 "Graph.ml" 180 5730 5799
type(
  node * weight
)
"Graph.ml" 180 5730 5804 "Graph.ml" 180 5730 5805
type(
  (node * weight) list
)
ident(
  int_ref r "Graph.ml" 180 5730 5785 "Graph.ml" 180 5730 5786
)
"Graph.ml" 180 5730 5790 "Graph.ml" 180 5730 5805
type(
  (node * weight) list
)
"Graph.ml" 180 5730 5785 "Graph.ml" 180 5730 5805
type(
  (node * weight) list -> (node * weight) list
)
"Graph.ml" 180 5730 5783 "Graph.ml" 180 5730 5805
type(
  weight -> (node * weight) list -> (node * weight) list
)
"Graph.ml" 180 5730 5777 "Graph.ml" 180 5730 5805
type(
  node -> weight -> (node * weight) list -> (node * weight) list
)
"Graph.ml" 180 5730 5807 "Graph.ml" 180 5730 5809
type(
  (node * weight) list
)
"Graph.ml" 180 5730 5810 "Graph.ml" 180 5730 5811
type(
  EdgeDict.value
)
ident(
  int_ref s "Graph.ml" 180 5730 5743 "Graph.ml" 180 5730 5744
)
"Graph.ml" 180 5730 5754 "Graph.ml" 180 5730 5811
call(
  stack
)
type(
  (node * weight) list
)
"Graph.ml" 180 5730 5748 "Graph.ml" 180 5730 5812
type(
  (node * weight) list option
)
"Graph.ml" 178 5668 5672 "Graph.ml" 180 5730 5812
type(
  (node * weight) list option
)
type(
  (node * weight) list option
)
"Graph.ml" 177 5616 5634 "Graph.ml" 180 5730 5812
type(
  node -> (node * weight) list option
)
"Graph.ml" 177 5616 5632 "Graph.ml" 180 5730 5812
type(
  graph -> node -> (node * weight) list option
)
"Graph.ml" 183 5868 5874 "Graph.ml" 183 5868 5888
type(
  graph -> node -> (node * node * weight) list option
)
ident(
  def outgoing_edges "Graph.ml" 189 6128 6130 "Graph.ml" 207 6653 6656
)
"Graph.ml" 183 5868 5889 "Graph.ml" 183 5868 5890
type(
  graph
)
ident(
  def g "Graph.ml" 183 5868 5891 "Graph.ml" 187 6056 6126
)
"Graph.ml" 183 5868 5891 "Graph.ml" 183 5868 5894
type(
  node
)
ident(
  def src "Graph.ml" 183 5868 5895 "Graph.ml" 187 6056 6126
)
"Graph.ml" 184 5934 5944 "Graph.ml" 184 5934 5959
type(
  EdgeDict.dict -> node -> EdgeDict.value option
)
ident(
  ext_ref EdgeDict.lookup
)
"Graph.ml" 184 5934 5960 "Graph.ml" 184 5934 5961
type(
  graph
)
ident(
  int_ref g "Graph.ml" 183 5868 5889 "Graph.ml" 183 5868 5890
)
"Graph.ml" 184 5934 5960 "Graph.ml" 184 5934 5967
type(
  EdgeDict.dict
)
"Graph.ml" 184 5934 5968 "Graph.ml" 184 5934 5971
type(
  node
)
ident(
  int_ref src "Graph.ml" 183 5868 5891 "Graph.ml" 183 5868 5894
)
"Graph.ml" 184 5934 5944 "Graph.ml" 184 5934 5971
call(
  stack
)
type(
  EdgeDict.value option
)
"Graph.ml" 185 5977 5985 "Graph.ml" 185 5977 5989
type(
  EdgeDict.value option
)
"Graph.ml" 185 5977 5993 "Graph.ml" 185 5977 5997
type(
  (node * node * weight) list option
)
"Graph.ml" 186 5998 6011 "Graph.ml" 186 5998 6012
type(
  EdgeDict.value
)
ident(
  def s "Graph.ml" 186 5998 6016 "Graph.ml" 187 6056 6126
)
"Graph.ml" 186 5998 6006 "Graph.ml" 186 5998 6012
type(
  EdgeDict.value option
)
"Graph.ml" 186 5998 6022 "Graph.ml" 186 5998 6039
type(
  (node ->
   weight -> (node * node * weight) list -> (node * node * weight) list) ->
  (node * node * weight) list ->
  EdgeDict.value -> (node * node * weight) list
)
ident(
  ext_ref NeighborDict.fold
)
"Graph.ml" 186 5998 6045 "Graph.ml" 186 5998 6048
type(
  node
)
ident(
  def dst "Graph.ml" 186 5998 6049 "Graph.ml" 187 6056 6119
)
"Graph.ml" 186 5998 6049 "Graph.ml" 186 5998 6050
type(
  weight
)
ident(
  def v "Graph.ml" 186 5998 6051 "Graph.ml" 187 6056 6119
)
"Graph.ml" 186 5998 6051 "Graph.ml" 186 5998 6052
type(
  (node * node * weight) list
)
ident(
  def r "Graph.ml" 187 6056 6101 "Graph.ml" 187 6056 6119
)
"Graph.ml" 187 6056 6102 "Graph.ml" 187 6056 6105
type(
  node
)
ident(
  int_ref src "Graph.ml" 183 5868 5891 "Graph.ml" 183 5868 5894
)
"Graph.ml" 187 6056 6107 "Graph.ml" 187 6056 6110
type(
  node
)
ident(
  int_ref dst "Graph.ml" 186 5998 6045 "Graph.ml" 186 5998 6048
)
"Graph.ml" 187 6056 6112 "Graph.ml" 187 6056 6113
type(
  weight
)
ident(
  int_ref v "Graph.ml" 186 5998 6049 "Graph.ml" 186 5998 6050
)
"Graph.ml" 187 6056 6102 "Graph.ml" 187 6056 6113
type(
  node * node * weight
)
"Graph.ml" 187 6056 6118 "Graph.ml" 187 6056 6119
type(
  (node * node * weight) list
)
ident(
  int_ref r "Graph.ml" 186 5998 6051 "Graph.ml" 186 5998 6052
)
"Graph.ml" 187 6056 6101 "Graph.ml" 187 6056 6119
type(
  (node * node * weight) list
)
"Graph.ml" 186 5998 6051 "Graph.ml" 187 6056 6119
type(
  (node * node * weight) list -> (node * node * weight) list
)
"Graph.ml" 186 5998 6049 "Graph.ml" 187 6056 6119
type(
  weight -> (node * node * weight) list -> (node * node * weight) list
)
"Graph.ml" 186 5998 6045 "Graph.ml" 187 6056 6119
type(
  node ->
  weight -> (node * node * weight) list -> (node * node * weight) list
)
"Graph.ml" 187 6056 6121 "Graph.ml" 187 6056 6123
type(
  (node * node * weight) list
)
"Graph.ml" 187 6056 6124 "Graph.ml" 187 6056 6125
type(
  EdgeDict.value
)
ident(
  int_ref s "Graph.ml" 186 5998 6011 "Graph.ml" 186 5998 6012
)
"Graph.ml" 186 5998 6022 "Graph.ml" 187 6056 6125
call(
  stack
)
type(
  (node * node * weight) list
)
"Graph.ml" 186 5998 6016 "Graph.ml" 187 6056 6126
type(
  (node * node * weight) list option
)
"Graph.ml" 184 5934 5938 "Graph.ml" 187 6056 6126
type(
  (node * node * weight) list option
)
type(
  (node * node * weight) list option
)
"Graph.ml" 183 5868 5891 "Graph.ml" 187 6056 6126
type(
  node -> (node * node * weight) list option
)
"Graph.ml" 183 5868 5889 "Graph.ml" 187 6056 6126
type(
  graph -> node -> (node * node * weight) list option
)
"Graph.ml" 189 6128 6134 "Graph.ml" 189 6128 6142
type(
  graph -> node -> bool
)
ident(
  def has_node "Graph.ml" 195 6297 6299 "Graph.ml" 207 6653 6656
)
"Graph.ml" 189 6128 6143 "Graph.ml" 189 6128 6144
type(
  graph
)
ident(
  def g "Graph.ml" 189 6128 6145 "Graph.ml" 192 6212 6229
)
"Graph.ml" 189 6128 6145 "Graph.ml" 189 6128 6146
type(
  node
)
ident(
  def n "Graph.ml" 190 6149 6153 "Graph.ml" 192 6212 6229
)
"Graph.ml" 190 6149 6159 "Graph.ml" 190 6149 6174
type(
  EdgeDict.dict -> node -> EdgeDict.value option
)
ident(
  ext_ref EdgeDict.lookup
)
"Graph.ml" 190 6149 6175 "Graph.ml" 190 6149 6176
type(
  graph
)
ident(
  int_ref g "Graph.ml" 189 6128 6143 "Graph.ml" 189 6128 6144
)
"Graph.ml" 190 6149 6175 "Graph.ml" 190 6149 6182
type(
  EdgeDict.dict
)
"Graph.ml" 190 6149 6183 "Graph.ml" 190 6149 6184
type(
  node
)
ident(
  int_ref n "Graph.ml" 189 6128 6145 "Graph.ml" 189 6128 6146
)
"Graph.ml" 190 6149 6159 "Graph.ml" 190 6149 6184
call(
  stack
)
type(
  EdgeDict.value option
)
"Graph.ml" 191 6190 6198 "Graph.ml" 191 6190 6202
type(
  EdgeDict.value option
)
"Graph.ml" 191 6190 6206 "Graph.ml" 191 6190 6211
type(
  bool
)
"Graph.ml" 192 6212 6220 "Graph.ml" 192 6212 6221
type(
  EdgeDict.value option
)
"Graph.ml" 192 6212 6225 "Graph.ml" 192 6212 6229
type(
  bool
)
"Graph.ml" 190 6149 6153 "Graph.ml" 192 6212 6229
type(
  bool
)
"Graph.ml" 189 6128 6145 "Graph.ml" 192 6212 6229
type(
  node -> bool
)
"Graph.ml" 189 6128 6143 "Graph.ml" 192 6212 6229
type(
  graph -> node -> bool
)
"Graph.ml" 195 6297 6303 "Graph.ml" 195 6297 6318
type(
  graph -> tag -> node option
)
ident(
  def get_node_by_tag "Graph.ml" 198 6390 6392 "Graph.ml" 207 6653 6656
)
"Graph.ml" 195 6297 6319 "Graph.ml" 195 6297 6320
type(
  graph
)
ident(
  def g "Graph.ml" 195 6297 6321 "Graph.ml" 196 6339 6388
)
"Graph.ml" 195 6297 6321 "Graph.ml" 195 6297 6322
type(
  tag
)
ident(
  def t "Graph.ml" 195 6297 6323 "Graph.ml" 196 6339 6388
)
"Graph.ml" 196 6339 6343 "Graph.ml" 196 6339 6362
type(
  EdgeDict.dict -> node -> node option
)
ident(
  ext_ref EdgeDict.verify_key
)
"Graph.ml" 196 6339 6363 "Graph.ml" 196 6339 6364
type(
  graph
)
ident(
  int_ref g "Graph.ml" 195 6297 6319 "Graph.ml" 195 6297 6320
)
"Graph.ml" 196 6339 6363 "Graph.ml" 196 6339 6370
type(
  EdgeDict.dict
)
"Graph.ml" 196 6339 6372 "Graph.ml" 196 6339 6385
type(
  tag -> node
)
ident(
  int_ref N.node_of_tag "Graph.ml" 18 396 398 "Graph.ml" 18 396 427
)
"Graph.ml" 196 6339 6386 "Graph.ml" 196 6339 6387
type(
  tag
)
ident(
  int_ref t "Graph.ml" 195 6297 6321 "Graph.ml" 195 6297 6322
)
"Graph.ml" 196 6339 6372 "Graph.ml" 196 6339 6387
call(
  stack
)
type(
  node
)
"Graph.ml" 196 6339 6343 "Graph.ml" 196 6339 6388
call(
  tail
)
type(
  node option
)
type(
  node option
)
"Graph.ml" 195 6297 6321 "Graph.ml" 196 6339 6388
type(
  tag -> node option
)
"Graph.ml" 195 6297 6319 "Graph.ml" 196 6339 6388
type(
  graph -> tag -> node option
)
"Graph.ml" 198 6390 6396 "Graph.ml" 198 6390 6407
type(
  tag -> node
)
ident(
  def node_of_tag "Graph.ml" 200 6425 6427 "Graph.ml" 207 6653 6656
)
"Graph.ml" 198 6390 6410 "Graph.ml" 198 6390 6423
type(
  tag -> node
)
ident(
  int_ref N.node_of_tag "Graph.ml" 18 396 398 "Graph.ml" 18 396 427
)
"Graph.ml" 200 6425 6431 "Graph.ml" 200 6425 6446
type(
  graph -> node option
)
ident(
  def get_random_node "Graph.ml" 205 6577 6579 "Graph.ml" 207 6653 6656
)
"Graph.ml" 200 6425 6447 "Graph.ml" 200 6425 6448
type(
  graph
)
ident(
  def g "Graph.ml" 201 6451 6455 "Graph.ml" 203 6531 6575
)
"Graph.ml" 201 6451 6458 "Graph.ml" 201 6451 6459
type(
  graph
)
ident(
  int_ref g "Graph.ml" 200 6425 6447 "Graph.ml" 200 6425 6448
)
"Graph.ml" 201 6451 6458 "Graph.ml" 201 6451 6469
type(
  int
)
"Graph.ml" 201 6451 6470 "Graph.ml" 201 6451 6471
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"Graph.ml" 201 6451 6472 "Graph.ml" 201 6451 6473
type(
  int
)
"Graph.ml" 201 6451 6458 "Graph.ml" 201 6451 6473
type(
  bool
)
"Graph.ml" 201 6451 6479 "Graph.ml" 201 6451 6483
type(
  node option
)
"Graph.ml" 202 6489 6499 "Graph.ml" 202 6489 6500
type(
  int
)
ident(
  def r "Graph.ml" 203 6531 6539 "Graph.ml" 203 6531 6575
)
"Graph.ml" 202 6489 6503 "Graph.ml" 202 6489 6513
type(
  int -> int
)
ident(
  ext_ref Core.Std.Random.int
)
"Graph.ml" 202 6489 6515 "Graph.ml" 202 6489 6516
type(
  graph
)
ident(
  int_ref g "Graph.ml" 200 6425 6447 "Graph.ml" 200 6425 6448
)
"Graph.ml" 202 6489 6515 "Graph.ml" 202 6489 6526
type(
  int
)
"Graph.ml" 202 6489 6503 "Graph.ml" 202 6489 6527
call(
  stack
)
type(
  int
)
"Graph.ml" 203 6531 6539 "Graph.ml" 203 6531 6553
type(
  IntNode.dict -> int -> node option
)
ident(
  ext_ref IntNode.lookup
)
"Graph.ml" 203 6531 6554 "Graph.ml" 203 6531 6555
type(
  graph
)
ident(
  int_ref g "Graph.ml" 200 6425 6447 "Graph.ml" 200 6425 6448
)
"Graph.ml" 203 6531 6554 "Graph.ml" 203 6531 6573
type(
  IntNode.dict
)
"Graph.ml" 203 6531 6574 "Graph.ml" 203 6531 6575
type(
  int
)
ident(
  int_ref r "Graph.ml" 202 6489 6499 "Graph.ml" 202 6489 6500
)
"Graph.ml" 203 6531 6539 "Graph.ml" 203 6531 6575
call(
  tail
)
type(
  node option
)
"Graph.ml" 202 6489 6495 "Graph.ml" 203 6531 6575
type(
  node option
)
"Graph.ml" 201 6451 6455 "Graph.ml" 203 6531 6575
type(
  node option
)
"Graph.ml" 200 6425 6447 "Graph.ml" 203 6531 6575
type(
  graph -> node option
)
"Graph.ml" 205 6577 6583 "Graph.ml" 205 6577 6598
type(
  graph -> bytes
)
ident(
  def string_of_graph "Graph.ml" 206 6603 6652 "Graph.ml" 207 6653 6656
)
"Graph.ml" 205 6577 6599 "Graph.ml" 205 6577 6600
type(
  graph
)
ident(
  def g "Graph.ml" 206 6603 6607 "Graph.ml" 206 6603 6652
)
"Graph.ml" 206 6603 6607 "Graph.ml" 206 6603 6616
type(
  bytes
)
"Graph.ml" 206 6603 6617 "Graph.ml" 206 6603 6618
type(
  bytes -> bytes -> bytes
)
ident(
  ext_ref Pervasives.( ^ )
)
"Graph.ml" 206 6603 6620 "Graph.ml" 206 6603 6643
type(
  EdgeDict.dict -> bytes
)
ident(
  ext_ref EdgeDict.string_of_dict
)
"Graph.ml" 206 6603 6644 "Graph.ml" 206 6603 6645
type(
  graph
)
ident(
  int_ref g "Graph.ml" 205 6577 6599 "Graph.ml" 205 6577 6600
)
"Graph.ml" 206 6603 6644 "Graph.ml" 206 6603 6651
type(
  EdgeDict.dict
)
"Graph.ml" 206 6603 6620 "Graph.ml" 206 6603 6651
call(
  stack
)
type(
  bytes
)
"Graph.ml" 206 6603 6607 "Graph.ml" 206 6603 6652
call(
  tail
)
type(
  bytes
)
"Graph.ml" 205 6577 6599 "Graph.ml" 206 6603 6652
type(
  graph -> bytes
)
